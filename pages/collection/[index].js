import { useRouter } from "next/router";
import styles from "@/styles/Collection.module.css";
import Image from "next/image";
import Layout from "@/components/layout";
import { getContract } from "../api/hello";
import { useEffect, useState } from "react";
import RaffleTable from "@/components/table";
import Head from "next/head";

export default function Collection() {
  const router = useRouter();
  const { index } = router.query;
  const [collection, setCollection] = useState({});
  const [contract, setContract] = useState();
  const [loading, setLoading] = useState(true);

  const getCollection = async () => {
    setLoading(true);
    const collection = await contract.collections(index);
    const raffleCount = collection.raffleCount;
    const raffles = [];

    for (let i = 0; i < raffleCount; i++) {
      const raffle = await contract.getRaffleOfCollection(index, i + 1);
      raffles.push({
        owner: raffle.owner,
        status: raffle.status?.toString(),
        name: raffle.name,
        id: raffle.id.toString(),
        numberOfTickets: raffle.numberOfTickets?.toString(),
        numberOfWinners: raffle.numberOfWinners?.toString(),
        time: raffle.time?.toString(),
      });
    }

    setCollection({
      name: collection.name.toString(),
      symbol: collection.symbol.toString(),
      image: collection.image.toString(),
      externalUrl: collection.externalUrl.toString(),
      twitterUrl: collection.twitterUrl.toString(),
      discordUrl: collection.discordUrl.toString(),
      supplyLimit: collection.supplyLimit.toString(),
      raffleCount: raffleCount.toString(),
      raffles: raffles,
    });
    setLoading(false);
  };

  useEffect(() => {
    if (contract) {
      getCollection();
    } else {
      getContract().then((contract) => {
        setContract(contract);
      });
    }
  }, [contract]);

  if (loading) {
    return (
      <Layout>
        <div className="left_gradient" />
        <div className="right_gradient" />
        <h1>Loading...</h1>
      </Layout>
    );
  }

  return (
    <Layout>
      <Head>
        <title>Collection </title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/png/fairraffle.png" />
      </Head>
      <div className="left_gradient" />
      <div className="right_gradient" />
      <main className={styles.main}>
        <div className={styles.headerInfo}>
          <p className={styles.headerInfo_text}>
            NOTE: THIS RAFFLE RESULTED IN POLYGON NETWORK VIA USING CHAINLINK’S
            VRF (RANDOM NUMBER) FOR PARTNER PROJECT. WE ARE WORKING HARD FOR
            FAIR RAFFLE’S PERMISSIONLESS & AUTOMATIC VERSION TO ENABLE ANYONE TO
            MAKE ANY RAFFLE. FINAL PRODUCT WILL BE ON STARKNET. WE ARE WAITING
            FOR STARKNET’S REGENESIS FOR RELEASING FULL VERSION
          </p>
        </div>
        <section className={styles.header}>
          <div className={styles.information}>
            <div className={styles.information_header}>
              <div className={styles.information_image}>
                <Image
                  src={collection.image}
                  alt="collection logo"
                  width={200}
                  height={200}
                />
              </div>
              <div className={styles.information_content}>
                <h1 className={styles.title}> {collection.name} </h1>
                <h2 className={styles.collection_club}>{collection.symbol}</h2>
                <div className={styles.logo_wrapper}>
                  <a
                    href={collection.twitterUrl}
                    target={"_blank"}
                    style={{ opacity: collection.twitterUrl ? "1.0" : "0.5" }}
                  >
                    <Image
                      src="/svg/twitter.svg"
                      alt={"twitter logo"}
                      width={32}
                      height={32}
                    />
                  </a>
                  <a
                    href={collection.discordUrl}
                    target={"_blank"}
                    style={{ opacity: collection.discordUrl ? "1.0" : "0.5" }}
                  >
                    <Image
                      src="/svg/discord.svg"
                      alt={"discord logo"}
                      width={32}
                      height={32}
                    />
                  </a>
                  <a
                    href={collection.externalUrl}
                    target={"_blank"}
                    style={{ opacity: collection.externalUrl ? "1.0" : "0.5" }}
                  >
                    <Image
                      src="/svg/web_box.svg"
                      alt={"website logo"}
                      width={32}
                      height={32}
                    />
                  </a>
                </div>
              </div>
            </div>
            <div className={styles.information_body}>
              <div className={styles.information_item}>
                <h3> Total Supply: </h3>
                <h4> {collection.supplyLimit} </h4>
              </div>
              <div className={styles.information_item}>
                <h3> Unique Holders: </h3>
                <h4> NAN </h4>
                {/* <Image src="/svg/refresh.svg" alt="refresh" fill /> */}
              </div>
            </div>
          </div>
          <div className={styles.start}>
            <h2 className={styles.title}> Start a raffle</h2>
            <div className={styles.start_item}>
              <h3 className={styles.start_item_name}> Auto Raffle </h3>
              <label className={styles.start_item_label}>
                Auto Raffle Among Holders
              </label>
              <button className={styles.start_button}>
                Only Owner Can Do It
              </button>
            </div>
            <div className={styles.start_item}>
              <h3 className={styles.start_item_name}> Raffle With List </h3>
              <label className={styles.start_item_label}>
                Only Collection Owner can do that. For custom raffles.
              </label>
              <button className={styles.start_button}>
                Only Owner Can Do It
              </button>
            </div>
          </div>
        </section>
        <div className={styles.past_raffle}>
          <h2 className={styles.title}> Past Raffles About This Collection </h2>
          <div className={styles.past_raffle_options}>
            <div className={styles.past_raffle_option}>
              <button className={styles.past_raffle_option_button}>
                Project Owner&apos;s
              </button>
            </div>
            <div className={styles.past_raffle_option}>
              {/* <label className={styles.disabled}> Disabled </label> */}
              <button className={styles.tooltip}>
                All Raffles
                <div className={styles.right}>
                  <div className={styles.text_content}>
                    <h3>Temporarily disabled for preventing scamming</h3>
                  </div>
                  <i></i>
                </div>
              </button>
            </div>
          </div>
          <RaffleTable raffles={collection.raffles} />
        </div>
      </main>
    </Layout>
  );
}
